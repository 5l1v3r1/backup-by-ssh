#!/bin/bash
function exiterr(){ notify-send -t 8640000 'Backup Script Failed' "${1}"; exit 1; }
function localsum(){ sha512sum "${1}" | grep -oe '[0-9a-f]\{128\}' || echo 'NoneLocal'; }
function remotesum(){ $sshcmd "sha512sum ${remotebkp}${1}" | grep -oe '[0-9a-f]\{128\}' || echo 'NoneRemote'; }

export DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/"${UID}"/bus
export DISPLAY=:0

failssh=0
server='user@server'
gpgrecipient='user@email'
remotebkp='/path/to/remote/dir/'
localbkp='/path/to/local/dir/'
sshcmd="ssh -o BatchMode=yes -o ConnectionAttempts=3 -o ConnectTimeout=2 ${server}"

until $sshcmd 'true' >&/dev/null; do
	((++failssh >= 30)) && exiterr "Cannot establish SSH connection to ${server}"
	sleep 1
done

bkphone=false
if kdeconnect-cli -l | grep -q reachable; then
	declare -A devices=()
	while read -r dev; do
		phoneid="$(echo "${dev}" | cut -d' ' -f1)"
		phonename="$(echo "${dev}" | cut -d' ' -f2-)"
		[[ -z "${phoneid}" || -z "${phonename}" ]] && break

		phonedir="/run/user/${UID}/${phoneid}/primary/Download/"
		if [[ ! -d "${phonedir}" ]]; then
			kdepid="$(pgrep -nf /usr/lib/kdeconnectd)"
			phoneip="$(netstat -pnt 2>/dev/null | awk -F'[ :]+' "/${kdepid}\/kdeconnectd/{printf \$6}")"
			phoneport="$(netcat -zvn "${phoneip}" 1714-1764 2>&1 | awk '/succeeded/{port=$4}END{printf port}')"
			sshfs kdeconnect@"${phoneip}":/ /run/user/"${UID}"/"${phoneid}" -p"${phoneport}" -s -F/dev/null -oIdentityFile=/home/"${USER}"/.config/kdeconnect/privateKey.pem -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oHostKeyAlgorithms=+ssh-dss -ouid="${UID}" -ogid="${UID}" -oreconnect -oBatchMode=yes -oConnectionAttempts=2 -oConnectTimeout=5
			[[ -d "${phonedir}" ]] || break
		fi

		devices["${phonedir}"]="${phonename}"
	done < <(kdeconnect-cli -a --id-name-only)

	((${#devices[@]} > 0)) && bkphone=true
fi

uploaded=()
declare -A bkpfiles=(
	["${HOME}/mail.tar.gpg"]="${HOME}/Mail"
	["${HOME}/ulb.tar.gpg"]='/usr/local/bin'
	["${HOME}/Documents/mpw2.kdbx"]=''
)

for bfile in "${!bkpfiles[@]}"; do
	dirnewer=false
	bkpdir="${bkpfiles[$bfile]}"

	if [[ -d "${bkpdir}" ]]; then
		for f in "${bkpdir}"/*; do
			[[ "$f" -nt "${HOME}/${bkpdir##*/}-last-modified" ]] && dirnewer=true
		done

		if $dirnewer; then
			tarf="${bfile%.gpg}"
			tar Pcf "${tarf}" "${bkpdir}" || exiterr "Error archiving ${tarf}"
			gpg --batch --yes --output "${bfile}" --encrypt --recipient "${gpgrecipient}" "${tarf}" || exiterr "Error encrypting ${tarf}"
			rm -f "${tarf}"
			touch "${HOME}/${bkpdir##*/}-last-modified"
		fi
	fi

	lsha512="$(localsum "${bfile}")"
	rsha512="$(remotesum "${bfile##*/}")"

	if [[ "${lsha512}" != "${rsha512}" ]]; then
		lsize="$(stat -c%s "${bfile}")"
		rsize="$($sshcmd "stat -c%s ${remotebkp}${bfile##*/}")"
		((lsize < rsize)) && exiterr "Local ${bfile##*/} filesize smaller (manual backup required)"

		scp -l 8000 -o BatchMode=yes "${bfile}" "${server}:${remotebkp}" || exiterr "Error copying ${bfile##*/} to ${server}"
		$bkphone && for phonedir in "${!devices[@]}"; do cp "${bfile}" "${phonedir}"; done
		[[ -d "${localbkp}" ]] && cp "${bfile}" "${localbkp}"

		uploaded+=("${bfile##*/}")
	fi
done

if [[ -z "${uploaded[*]}" ]]; then
	notify-send -t 8640000 'Backup Script Successful' 'No uploads were needed'
else
	IFS=$'\n'
	$bkphone && andphone="and phones:$(printf ' "%s"' "${devices[@]}")" || andphone='only'
	notify-send -t 8640000 'Backup Script Successful' "Successfully uploaded files (server ${andphone}):\\n${uploaded[*]}"
fi
